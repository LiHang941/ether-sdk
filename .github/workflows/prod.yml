name: Build SDK PROD

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: Ubuntu-20.04
    steps:
      - name: Check out git repository
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.JS_SDK_SSH_KEY }}
          fetch-depth: 0
          persist-credentials: true
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.JS_SDK_SSH_KEY }}
      - name: setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: build
        run: |

          export GIT_COMMIT_USER_NAME=`git show -s --format=%an`
          export GIT_COMMIT_USER_EMAIL=`git show -s --format=%ae`

          git config user.email "${GIT_COMMIT_USER_EMAIL}"
          git config user.name "${GIT_COMMIT_USER_NAME}"

          export GIT_COMMIT_MESSAGE=`git show -s --format=%s`
          export GIT_TAG="0.0.$(git rev-list --count HEAD)1"

          echo "TAG ->> $GIT_TAG"
          
          mkdir ../temp_lib/
          cp -r yarn.lock ../temp_lib/
          
          # build
          GIT_SSH_COMMAND="ssh"
          npm install
          npm run build


          
          mv lib ../temp_lib/
          mv lib.umd ../temp_lib/

          git fetch origin
          git checkout -b release origin/release

          mv ../temp_lib/lib.umd lib 
          mv ../temp_lib/lib.umd lib.umd 
          mv ../temp_lib/yarn.lock yarn.lock
          
          rm -rf src
          rm -rf test
          

          # upload
          cat package.json | jq --arg tag ${GIT_TAG}  'setpath(["version"];$tag)' > "package.json.bak"
          mv package.json.bak package.json
          
          git add .
          
          git commit -m "${GIT_COMMIT_MESSAGE}"
          git tag -a ${GIT_TAG} -m "${GIT_COMMIT_MESSAGE}"
          git push --tags
          git push
